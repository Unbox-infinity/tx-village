CREATE SCHEMA PLUTUS;

SET SEARCH_PATH TO PLUTUS;

CREATE DOMAIN HASH28 AS
    BYTEA CHECK (LENGTH(VALUE) = 28);

CREATE DOMAIN HASH32 AS
    BYTEA CHECK (LENGTH(VALUE) = 32);

CREATE DOMAIN CURRENCY_SYMBOL AS 
    BYTEA CHECK (LENGTH(VALUE) = 28 OR LENGTH(VALUE) = 0);

CREATE DOMAIN TOKEN_NAME AS
    BYTEA CHECK (LENGTH(VALUE) <= 32);

CREATE DOMAIN TRANSACTION_HASH AS HASH32;

CREATE DOMAIN ED25519_PUBKEYHASH AS HASH28;

CREATE DOMAIN SCRIPT_HASH AS HASH28;

CREATE DOMAIN DATUM_HASH AS HASH32;

CREATE DOMAIN SLOT AS BIGINT;

CREATE DOMAIN PLUTUS_DATA AS JSONB;

CREATE TYPE CREDENTIAL AS (
    pub_key_hash ED25519_PUBKEYHASH,
    script_hash SCRIPT_HASH
);

CREATE TYPE CHAIN_POINTER AS (
    slot_num BIGINT,
    tx_idx BIGINT,
    cert_idx BIGINT
);


CREATE TYPE STAKING_CREDENTIAL AS (
    staking_hash CREDENTIAL,
    staking_ptr CHAIN_POINTER
);

CREATE TYPE Address AS (
    credential CREDENTIAL,
    staking_credential STAKING_CREDENTIAL
);

CREATE TYPE ASSET_QUANTITY AS (
    currency_symbol CURRENCY_SYMBOL,
    token_name TOKEN_NAME,
    amount BIGINT
);

CREATE DOMAIN VALUE AS ASSET_QUANTITY[];

CREATE TYPE TRANSACTION_INPUT AS (
    tx_id TRANSACTION_HASH,
    tx_idx BIGINT
);

CREATE TYPE OUTPUT_DATUM AS (
    datum_hash DATUM_HASH,
    -- FIXME(szg251): Couldn't use PlutusData domain type becauseof a
    -- sqlx deserialization error: `expected value at line 1 column 1`
    inline_datum JSONB
);

CREATE TYPE TRANSACTION_OUTPUT AS (
    address ADDRESS,
    assets ASSET_QUANTITY[],
    datum OUTPUT_DATUM,
    reference_script SCRIPT_HASH
);

CREATE TYPE TX_IN_INFO AS (
    reference TRANSACTION_INPUT,
    output TRANSACTION_OUTPUT
);

