CREATE SCHEMA PLUTUS;

CREATE DOMAIN PLUTUS.HASH28 AS
    BYTEA CHECK (LENGTH(VALUE) = 28);

CREATE DOMAIN PLUTUS.HASH32 AS
    BYTEA CHECK (LENGTH(VALUE) = 32);

CREATE DOMAIN PLUTUS.CURRENCY_SYMBOL AS 
    BYTEA CHECK (LENGTH(VALUE) = 28 OR LENGTH(VALUE) = 0);

CREATE DOMAIN PLUTUS.TOKEN_NAME AS
    BYTEA CHECK (LENGTH(VALUE) <= 32);

CREATE DOMAIN PLUTUS.TRANSACTION_HASH AS PLUTUS.HASH32;

CREATE DOMAIN PLUTUS.ED25519_PUBKEYHASH AS PLUTUS.HASH28;

CREATE DOMAIN PLUTUS.SCRIPT_HASH AS PLUTUS.HASH28;

CREATE DOMAIN PLUTUS.DATUM_HASH AS PLUTUS.HASH32;

CREATE DOMAIN PLUTUS.SLOT AS BIGINT;

CREATE DOMAIN PLUTUS.PLUTUS_DATA AS JSONB;

CREATE TYPE PLUTUS.CREDENTIAL AS (
    pub_key_hash PLUTUS.ED25519_PUBKEYHASH,
    script_hash PLUTUS.SCRIPT_HASH
);

CREATE TYPE PLUTUS.CHAIN_POINTER AS (
    slot_num BIGINT,
    tx_idx BIGINT,
    cert_idx BIGINT
);


CREATE TYPE PLUTUS.STAKING_CREDENTIAL AS (
    staking_hash PLUTUS.CREDENTIAL,
    staking_ptr PLUTUS.CHAIN_POINTER
);

CREATE TYPE PLUTUS.ADDRESS AS (
    credential PLUTUS.CREDENTIAL,
    staking_credential PLUTUS.STAKING_CREDENTIAL
);

CREATE TYPE PLUTUS.ASSET_QUANTITY AS (
    currency_symbol PLUTUS.CURRENCY_SYMBOL,
    token_name PLUTUS.TOKEN_NAME,
    amount BIGINT
);

CREATE DOMAIN PLUTUS.VALUE AS PLUTUS.ASSET_QUANTITY[];

CREATE TYPE PLUTUS.TRANSACTION_INPUT AS (
    tx_id PLUTUS.TRANSACTION_HASH,
    tx_idx BIGINT
);

CREATE TYPE PLUTUS.OUTPUT_DATUM AS (
    datum_hash PLUTUS.DATUM_HASH,
    -- FIXME(szg251): Couldn't use PlutusData domain type becauseof a
    -- sqlx deserialization error: `expected value at line 1 column 1`
    inline_datum JSONB
);

CREATE TYPE PLUTUS.TRANSACTION_OUTPUT AS (
    address PLUTUS.ADDRESS,
    assets PLUTUS.ASSET_QUANTITY[],
    datum PLUTUS.OUTPUT_DATUM,
    reference_script PLUTUS.SCRIPT_HASH
);

CREATE TYPE PLUTUS.TX_IN_INFO AS (
    reference PLUTUS.TRANSACTION_INPUT,
    output PLUTUS.TRANSACTION_OUTPUT
);

